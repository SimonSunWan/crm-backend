services:
  # PostgreSQL数据库
  postgres:
    image: postgres:15-alpine
    container_name: crm-postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - crm-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: crm-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - crm-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # CRM后端应用
  crm-backend:
    build: 
      context: ..
      dockerfile: docker/Dockerfile
    container_name: crm-backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:123456@postgres:5432/postgres
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=your-secret-key-here-change-in-production
      - BACKEND_CORS_ORIGINS=["http://localhost:3000","http://localhost:8080"]
      - DEBUG=true
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - crm-network
    volumes:
      - ../app:/app/app
      - ../alembic:/app/alembic
      - ../scripts:/app/scripts
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  crm-network:
    driver: bridge
